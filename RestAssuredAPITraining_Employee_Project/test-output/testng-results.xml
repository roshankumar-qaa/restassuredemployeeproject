<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="6" ignored="0" total="32" passed="26">
  <reporter-output>
  </reporter-output>
  <suite name="restassuredtestsuite" duration-ms="29654" started-at="2020-02-03T10:53:50Z" finished-at="2020-02-03T10:54:20Z">
    <groups>
    </groups>
    <test name="restassuredtests" duration-ms="29654" started-at="2020-02-03T10:53:50Z" finished-at="2020-02-03T10:54:20Z">
      <class name="com.employeeapi.testCases.TC003_Post_Employee_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@5622fdf]" name="setup" is-config="true" duration-ms="1" started-at="2020-02-03T10:54:01Z" finished-at="2020-02-03T10:54:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@5622fdf]" name="createEmployee" is-config="true" duration-ms="6783" started-at="2020-02-03T10:54:01Z" finished-at="2020-02-03T10:54:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@5622fdf]" name="checkContentType" duration-ms="1" started-at="2020-02-03T10:54:08Z" finished-at="2020-02-03T10:54:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@5622fdf]" name="checkResponseBody" duration-ms="2" started-at="2020-02-03T10:54:08Z" finished-at="2020-02-03T10:54:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.employeeapi.testCases.TC003_Post_Employee_Record.checkResponseBody(TC003_Post_Employee_Record.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@5622fdf]" name="checkServerType" duration-ms="1" started-at="2020-02-03T10:54:08Z" finished-at="2020-02-03T10:54:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@5622fdf]" name="checkStatusCode" duration-ms="0" started-at="2020-02-03T10:54:08Z" finished-at="2020-02-03T10:54:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@5622fdf]" name="checkStatusLine" duration-ms="0" started-at="2020-02-03T10:54:08Z" finished-at="2020-02-03T10:54:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="teaDown()[pri:0, instance:com.employeeapi.testCases.TC003_Post_Employee_Record@5622fdf]" name="teaDown" is-config="true" duration-ms="0" started-at="2020-02-03T10:54:08Z" finished-at="2020-02-03T10:54:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teaDown -->
      </class> <!-- com.employeeapi.testCases.TC003_Post_Employee_Record -->
      <class name="com.employeeapi.testCases.TC005_Delete_Employee_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@7d9d1a19]" name="setup" is-config="true" duration-ms="2" started-at="2020-02-03T10:54:14Z" finished-at="2020-02-03T10:54:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@7d9d1a19]" name="createEmployee" is-config="true" duration-ms="6103" started-at="2020-02-03T10:54:14Z" finished-at="2020-02-03T10:54:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@7d9d1a19]" name="checkContentType" duration-ms="2" started-at="2020-02-03T10:54:20Z" finished-at="2020-02-03T10:54:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@7d9d1a19]" name="checkResponseBody" duration-ms="1" started-at="2020-02-03T10:54:20Z" finished-at="2020-02-03T10:54:20Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.employeeapi.testCases.TC005_Delete_Employee_Record.checkResponseBody(TC005_Delete_Employee_Record.java:52)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@7d9d1a19]" name="checkServerType" duration-ms="0" started-at="2020-02-03T10:54:20Z" finished-at="2020-02-03T10:54:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@7d9d1a19]" name="checkStatusCode" duration-ms="0" started-at="2020-02-03T10:54:20Z" finished-at="2020-02-03T10:54:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@7d9d1a19]" name="checkStatusLine" duration-ms="0" started-at="2020-02-03T10:54:20Z" finished-at="2020-02-03T10:54:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="teaDown()[pri:0, instance:com.employeeapi.testCases.TC005_Delete_Employee_Record@7d9d1a19]" name="teaDown" is-config="true" duration-ms="0" started-at="2020-02-03T10:54:20Z" finished-at="2020-02-03T10:54:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teaDown -->
      </class> <!-- com.employeeapi.testCases.TC005_Delete_Employee_Record -->
      <class name="com.employeeapi.testCases.TC001_Get_All_Employees">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@6d4b1c02]" name="setup" is-config="true" duration-ms="55" started-at="2020-02-03T10:53:50Z" finished-at="2020-02-03T10:53:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@6d4b1c02]" name="getAllEmployees" is-config="true" duration-ms="4681" started-at="2020-02-03T10:53:50Z" finished-at="2020-02-03T10:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@6d4b1c02]" name="checkContentEncoding" duration-ms="9" started-at="2020-02-03T10:53:55Z" finished-at="2020-02-03T10:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@6d4b1c02]" name="checkContentLength" duration-ms="1" started-at="2020-02-03T10:53:55Z" finished-at="2020-02-03T10:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@6d4b1c02]" name="checkContentType" duration-ms="1" started-at="2020-02-03T10:53:55Z" finished-at="2020-02-03T10:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@6d4b1c02]" name="checkResponseBody" duration-ms="18" started-at="2020-02-03T10:53:55Z" finished-at="2020-02-03T10:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@6d4b1c02]" name="checkResponseTime" duration-ms="6" started-at="2020-02-03T10:53:55Z" finished-at="2020-02-03T10:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@6d4b1c02]" name="checkServerType" duration-ms="1" started-at="2020-02-03T10:53:55Z" finished-at="2020-02-03T10:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@6d4b1c02]" name="checkStatusCode" duration-ms="1" started-at="2020-02-03T10:53:55Z" finished-at="2020-02-03T10:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@6d4b1c02]" name="checkStatusLine" duration-ms="1" started-at="2020-02-03T10:53:55Z" finished-at="2020-02-03T10:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="checkTestCookies()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@6d4b1c02]" name="checkTestCookies" duration-ms="1" started-at="2020-02-03T10:53:55Z" finished-at="2020-02-03T10:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTestCookies -->
        <test-method status="PASS" signature="teaDown()[pri:0, instance:com.employeeapi.testCases.TC001_Get_All_Employees@6d4b1c02]" name="teaDown" is-config="true" duration-ms="5" started-at="2020-02-03T10:53:55Z" finished-at="2020-02-03T10:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teaDown -->
      </class> <!-- com.employeeapi.testCases.TC001_Get_All_Employees -->
      <class name="com.employeeapi.testCases.TC004_Put_Employee_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@4883b407]" name="setup" is-config="true" duration-ms="1" started-at="2020-02-03T10:54:08Z" finished-at="2020-02-03T10:54:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createEmployee()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@4883b407]" name="createEmployee" is-config="true" duration-ms="5940" started-at="2020-02-03T10:54:08Z" finished-at="2020-02-03T10:54:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@4883b407]" name="checkContentType" duration-ms="2" started-at="2020-02-03T10:54:14Z" finished-at="2020-02-03T10:54:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@4883b407]" name="checkResponseBody" duration-ms="2" started-at="2020-02-03T10:54:14Z" finished-at="2020-02-03T10:54:14Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:568)
at org.testng.Assert.assertEquals(Assert.java:578)
at com.employeeapi.testCases.TC004_Put_Employee_Record.checkResponseBody(TC004_Put_Employee_Record.java:58)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@4883b407]" name="checkServerType" duration-ms="0" started-at="2020-02-03T10:54:14Z" finished-at="2020-02-03T10:54:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@4883b407]" name="checkStatusCode" duration-ms="1" started-at="2020-02-03T10:54:14Z" finished-at="2020-02-03T10:54:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@4883b407]" name="checkStatusLine" duration-ms="0" started-at="2020-02-03T10:54:14Z" finished-at="2020-02-03T10:54:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="teaDown()[pri:0, instance:com.employeeapi.testCases.TC004_Put_Employee_Record@4883b407]" name="teaDown" is-config="true" duration-ms="0" started-at="2020-02-03T10:54:14Z" finished-at="2020-02-03T10:54:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teaDown -->
      </class> <!-- com.employeeapi.testCases.TC004_Put_Employee_Record -->
      <class name="com.employeeapi.testCases.TC002_Get_Single_Employee_Record">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@6093dd95]" name="setup" is-config="true" duration-ms="2" started-at="2020-02-03T10:53:55Z" finished-at="2020-02-03T10:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getAllEmployeeData()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@6093dd95]" name="getAllEmployeeData" is-config="true" duration-ms="5934" started-at="2020-02-03T10:53:55Z" finished-at="2020-02-03T10:54:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployeeData -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@6093dd95]" name="checkContentEncoding" duration-ms="2" started-at="2020-02-03T10:54:01Z" finished-at="2020-02-03T10:54:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="FAIL" signature="checkContentLength()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@6093dd95]" name="checkContentLength" duration-ms="3" started-at="2020-02-03T10:54:01Z" finished-at="2020-02-03T10:54:01Z">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: null
at java.lang.Integer.parseInt(Unknown Source)
at java.lang.Integer.parseInt(Unknown Source)
at com.employeeapi.testCases.TC002_Get_Single_Employee_Record.checkContentLength(TC002_Get_Single_Employee_Record.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@6093dd95]" name="checkContentType" duration-ms="3" started-at="2020-02-03T10:54:01Z" finished-at="2020-02-03T10:54:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@6093dd95]" name="checkResponseBody" duration-ms="2" started-at="2020-02-03T10:54:01Z" finished-at="2020-02-03T10:54:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@6093dd95]" name="checkResponseTime" duration-ms="3" started-at="2020-02-03T10:54:01Z" finished-at="2020-02-03T10:54:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkServerType()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@6093dd95]" name="checkServerType" duration-ms="1" started-at="2020-02-03T10:54:01Z" finished-at="2020-02-03T10:54:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method status="FAIL" signature="checkStatusCode()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@6093dd95]" name="checkStatusCode" duration-ms="1" started-at="2020-02-03T10:54:01Z" finished-at="2020-02-03T10:54:01Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at com.employeeapi.testCases.TC002_Get_Single_Employee_Record.checkStatusCode(TC002_Get_Single_Employee_Record.java:43)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="FAIL" signature="checkStatusLine()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@6093dd95]" name="checkStatusLine" duration-ms="1" started-at="2020-02-03T10:54:01Z" finished-at="2020-02-03T10:54:01Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [HTTP/1.1 200 OK] but found [HTTP/1.1 404 Not Found]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [HTTP/1.1 200 OK] but found [HTTP/1.1 404 Not Found]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.employeeapi.testCases.TC002_Get_Single_Employee_Record.checkStatusLine(TC002_Get_Single_Employee_Record.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="teaDown()[pri:0, instance:com.employeeapi.testCases.TC002_Get_Single_Employee_Record@6093dd95]" name="teaDown" is-config="true" duration-ms="0" started-at="2020-02-03T10:54:01Z" finished-at="2020-02-03T10:54:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teaDown -->
      </class> <!-- com.employeeapi.testCases.TC002_Get_Single_Employee_Record -->
    </test> <!-- restassuredtests -->
  </suite> <!-- restassuredtestsuite -->
</testng-results>
